(function() {var implementors = {};
implementors["hamilton"] = [{"text":"impl !UnwindSafe for HamiltonLssDriver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MotorConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BodyConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WireMoveCommand","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MotorCommand","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HolonomicWheelCommand","synthetic":true,"types":[]}];
implementors["hamilton_controller"] = [{"text":"impl&lt;T&gt; !UnwindSafe for HamiltonRemoteClient&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for HamiltonRemoteServer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for _Inner&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoveCommand","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoveRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoveResponse","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for HamiltonRemoteController","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Args","synthetic":true,"types":[]}];
implementors["hamilton_guppy_controller"] = [{"text":"impl&lt;T&gt; !UnwindSafe for HamiltonRemoteClient&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for HamiltonRemoteServer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for _Inner&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoveCommand","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoveRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoveResponse","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for HamiltonRemoteController","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Args","synthetic":true,"types":[]}];
implementors["vehicle_config_test"] = [{"text":"impl UnwindSafe for Args","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoveCommand","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()