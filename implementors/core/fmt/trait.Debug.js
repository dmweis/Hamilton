(function() {var implementors = {};
implementors["hamilton"] = [{"text":"impl Debug for MotorConfig","synthetic":false,"types":[]},{"text":"impl Debug for BodyConfig","synthetic":false,"types":[]},{"text":"impl Debug for WireMoveCommand","synthetic":false,"types":[]},{"text":"impl Debug for MotorCommand","synthetic":false,"types":[]},{"text":"impl Debug for HolonomicWheelCommand","synthetic":false,"types":[]},{"text":"impl Debug for TrackedObjects","synthetic":false,"types":[]},{"text":"impl Debug for VrDeviceClass","synthetic":false,"types":[]},{"text":"impl Debug for VrDevice","synthetic":false,"types":[]},{"text":"impl Debug for InputsState","synthetic":false,"types":[]},{"text":"impl Debug for Map","synthetic":false,"types":[]},{"text":"impl Debug for Pose","synthetic":false,"types":[]},{"text":"impl Debug for NavigationController","synthetic":false,"types":[]}];
implementors["hamilton_controller"] = [{"text":"impl Debug for MoveCommand","synthetic":false,"types":[]},{"text":"impl Debug for MoveRequest","synthetic":false,"types":[]},{"text":"impl Debug for MoveResponse","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Debug for HamiltonRemoteClient&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug + HamiltonRemote&gt; Debug for HamiltonRemoteServer&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Debug for _Inner&lt;T&gt;","synthetic":false,"types":[]}];
implementors["hamilton_guppy_controller"] = [{"text":"impl Debug for MoveCommand","synthetic":false,"types":[]},{"text":"impl Debug for MoveRequest","synthetic":false,"types":[]},{"text":"impl Debug for MoveResponse","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Debug for HamiltonRemoteClient&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug + HamiltonRemote&gt; Debug for HamiltonRemoteServer&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Debug&gt; Debug for _Inner&lt;T&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()